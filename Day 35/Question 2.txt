/*package whatever //do not write package name here */

import java.util.Scanner;

class ModifiedBinarySearch {
    private static boolean isGroupOne(int num,int[] a){
        if(a[0]>num)
            return false;
        else
            return true;
    }
    private static int solve(int[] a, int ele){
        if(a.length==1)
            return (ele==a[0]?ele:-1);
        boolean isEleGroupOne = isGroupOne(ele,a);
        int low = 0;
        int high = a.length-1;
        int mid = 0;
        while(true){
        	if(low>high) {        		
        		mid=-1;
        		break;
        	}
            if(low==high){
                mid = high;
                if(a[mid]!=ele)
                    mid = -1;
                break;
            }
            else
                mid = (low+high)/2;
            if(a[mid]==ele)
            	break;
            boolean isMidGroupOne = isGroupOne(a[mid],a);
            //XNOR
            if(!(isEleGroupOne^isMidGroupOne)){
                if(a[mid]>ele)
                    high = mid-1;
                else
                    low = mid+1;
            }
            else{
                if(isEleGroupOne)
                    high = mid-1;
                else
                    low = mid+1;
            }
        }
        return mid;
    }
	public static void main (String[] args) {
        Scanner sc = new Scanner(System.in);
        StringBuffer sb = new StringBuffer();
        int t = sc.nextInt();
        while(t-->0){
            int n = sc.nextInt();
            int[] a = new int[n];
            for(int i=0;i<n;++i)
                a[i]=sc.nextInt();
            int e = sc.nextInt();
            sb.append(solve(a,e)+"\n");
        }
        sc.close();
        System.out.println(sb);
	}
}